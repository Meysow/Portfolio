@use "./variables";

//*********** Slide Container ***************//
@mixin sectionContainer {
  max-width: 75vw;
  margin-left: 1.6rem;
  display: flex;
  flex-direction: column-reverse;
  margin-top: 1.6rem;

  @include largeScreen() {
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
    gap: 3.6rem;
    width: 75vw;
    margin-top: 0;
  }

  .titleWrapper {
    z-index: 3;
    overflow: hidden;

    @include largeScreen() {
      flex-basis: 55%;
    }

    .title {
      font-weight: 500;
      //TODO: A ajuster
      font-size: variables.$title-font-size;
      text-shadow: 0 7px 7px rgba(2, 11, 22, 0.618);

      margin-bottom: 0.4rem;
      @include mediumScreen() {
        margin-bottom: 0.6rem;
      }
    }

    .text,
    .textTwo,
    .textThree,
    .icon {
      color: rgba(var(--color-text-rgb), 0.83);
      // TODO: a ajuster
      font-size: variables.$icon-font-size;
      text-shadow: 0 4px 4px rgba(2, 11, 22, 0.618);

      margin-bottom: 0.2rem;
      @include mediumScreen() {
        margin-bottom: 0.4rem;
      }
    }
  }
}

//*********** Style when a slide becomes the ACTIVE One ***************//

@mixin activeStyle {
  .title {
    animation: slide-in-text-one 0.6s cubic-bezier(0.43, 0.18, 0.45, 1);
    animation-fill-mode: forwards;
  }

  .icon {
    animation: fadeInSpan 0.9s cubic-bezier(0.43, 0.18, 0.45, 1);
    animation-fill-mode: forwards;
  }
  .text {
    animation: slide-in-text-one 0.8s cubic-bezier(0.43, 0.18, 0.45, 1);
    animation-fill-mode: forwards;
  }
  .textTwo {
    animation: slide-in-text-one 0.9s cubic-bezier(0.43, 0.18, 0.45, 1);
    animation-fill-mode: forwards;
  }
  .textThree {
    animation: slide-in-text-one 1s cubic-bezier(0.43, 0.18, 0.45, 1);
    animation-fill-mode: forwards;
  }

  button,
  a {
    animation: slide-in-text-one 1.2s cubic-bezier(0.43, 0.18, 0.45, 1);
    animation-fill-mode: forwards;
  }
}

//*********** MEDIA QUERIES ***************//

// 600px
@mixin smallScreen() {
  @media (min-width: 37.5rem) {
    @content;
  }
}

// 900px
@mixin mediumScreen() {
  @media (min-width: 56.25rem) {
    @content;
  }
}

// 1200px
@mixin largeScreen() {
  @media (min-width: 75rem) {
    @content;
  }
}

// 1800px
@mixin extraLargeScreen() {
  @media (min-width: 112.5rem) {
    @content;
  }
}

// BACKGROUND with grid like squares //

@mixin bg-grid {
  content: "";
  position: fixed;
  height: 109vh;
  width: 109vw;
  background-repeat: repeat;
  background-attachment: scroll;
  background-origin: padding-box;
  background-clip: border-box;
  background-image: linear-gradient(currentcolor 1px, transparent 1px),
    linear-gradient(to right, currentcolor 1px, transparent 1px);
  background-size: 94px 90px;
  color: rgba(113, 113, 113, 0.09);
  background-color: transparent;
  z-index: -1;
}

////// TODO: Faire le tri //////

@mixin bg-gradient {
  background: linear-gradient(
    61.8deg,
    rgba($color-dark, 1) 0%,
    rgba($color-primary, 1) 33%,
    rgba($color-secondary, 1) 100%
  );
}

@mixin breakpoint($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  } @else {
    @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '
    + 'Please make sure it is defined in `$grid-breakpoints` map.';
  }
}

@mixin content-width {
  width: min(92%, map_get($container-max-widths, xl));
  // max-width: map_get($container-max-widths, xs);
  padding: 2.8rem 1rem;

  @include breakpoint("lg") {
    width: min(88%, map_get($container-max-widths, xl));
  }
}
